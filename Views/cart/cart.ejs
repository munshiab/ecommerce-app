<div class="container">
  <h3 class="center-align">Your Cart</h3>

  <% if (cartItems.length === 0) { %>
    <p class="center-align">Your cart is empty. Start adding some products!</p>
  <% } else { %>
    <table class="highlight responsive-table">
      <thead>
        <tr>
          <th>Image</th>
          <th>Product</th>
          <th>Price</th>
          <th>Quantity</th>
          <th>Total</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody>
        <% cartItems.forEach(item => { %>
          <tr>
            <!-- Product Image -->
            <td>
              <img 
                src="<%= item.image_url %>" 
                alt="<%= item.product_name %>" 
                style="width: 50px; height: 50px; object-fit: cover;"
              >
            </td>

            <!-- Product Name -->
            <td><%= item.product_name %></td>

            <!-- Product Price -->
            <td>$<%= (parseFloat(item.price) || 0).toFixed(2) %></td>

            <!-- Quantity Field -->
            <td>
              <div class="input-field" style="width: 100px;">
                <input 
                  type="number" 
                  id="quantity-<%= item.product_id %>" 
                  value="<%= item.quantity %>" 
                  min="1" 
                  style="text-align: center;"
                  onchange="updateCartQuantity('<%= item.product_id %>', this.value)"
                >
              </div>
            </td>

            <!-- Total Price -->
            <td>$<%= (parseFloat(item.total_price) || 0).toFixed(2) %></td>

            <!-- Remove Button -->
            <td>
              <button 
                class="btn red" 
                onclick="removeFromCart('<%= item.product_id %>')"
              >
                Remove
              </button>
            </td>
          </tr>
        <% }) %>
      </tbody>
    </table>

    <!-- Total Section -->
    <div class="right-align">
      <h5>
        Total: $<%= (parseFloat(cartItems.reduce((sum, item) => sum + item.total_price, 0))).toFixed(2) %>
      </h5>
    </div>

    <!-- Checkout Button -->
    <div class="center-align">
      <a href="/checkout" class="btn waves-effect waves-light">Proceed to Checkout</a>
    </div>
  <% } %>
</div>

<script>
  // Handle updating cart quantity
  async function updateCartQuantity(productId, quantity) {
    if (quantity < 1) {
      M.toast({ html: 'Quantity must be at least 1', classes: 'red darken-1' });
      return;
    }

    try {
      const response = await fetch('/cart/update', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ product_id: productId, quantity: quantity }),
      });

      const data = await response.json();
      if (data.success) {
        M.toast({ html: 'Cart updated successfully!', classes: 'green darken-1' });
        location.reload(); // Reload the cart page
      } else {
        M.toast({ html: 'Error updating cart', classes: 'red darken-1' });
      }
    } catch (error) {
      console.error('Error updating cart:', error);
    }
  }

  // Handle removing items from cart
  async function removeFromCart(productId) {
    try {
      const response = await fetch('/cart/remove', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ product_id: productId }),
      });

      const data = await response.json();
      if (data.success) {
        M.toast({ html: 'Item removed from cart!', classes: 'green darken-1' });
        location.reload(); // Reload the cart page
      } else {
        M.toast({ html: 'Error removing item', classes: 'red darken-1' });
      }
    } catch (error) {
      console.error('Error removing item:', error);
    }
  }
</script>
